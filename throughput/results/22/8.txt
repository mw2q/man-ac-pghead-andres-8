BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'CANADA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AMERICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL PLATED TIN'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1790386.33..1790388.15 rows=727 width=38) (actual time=9816.077..9816.078 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1730008 read=282839 dirtied=1452 written=10568
   ->  HashAggregate  (cost=1790339.05..1790351.77 rows=727 width=38) (actual time=9816.023..9816.024 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1730005 read=282839 dirtied=1452 written=10568
         ->  Hash Join  (cost=39461.38..1789832.15 rows=25345 width=38) (actual time=1044.121..9776.867 rows=24310 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1730005 read=282839 dirtied=1452 written=10568
               ->  Nested Loop  (cost=39459.82..1789355.37 rows=25345 width=16) (actual time=1044.067..9741.784 rows=24310 loops=1)
                     Buffers: shared hit=1730001 read=282839 dirtied=1452 written=10568
                     ->  Hash Join  (cost=39459.53..1781177.17 rows=25346 width=16) (actual time=1044.052..9557.591 rows=24310 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1656932 read=282839 dirtied=1452 written=10568
                           ->  Nested Loop  (cost=428.84..1741417.79 rows=126729 width=20) (actual time=6.881..8437.499 rows=121652 loops=1)
                                 Buffers: shared hit=1547095 read=246739 dirtied=1452 written=10553
                                 ->  Nested Loop  (cost=428.41..1536039.36 rows=419434 width=16) (actual time=6.793..4315.043 rows=400200 loops=1)
                                       Buffers: shared hit=249934 read=220239 dirtied=1452 written=9256
                                       ->  Bitmap Heap Scan on part  (cost=427.84..28754.73 rows=13860 width=4) (actual time=6.722..186.221 rows=13365 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL PLATED TIN'::text)
                                             Heap Blocks: exact=11430
                                             Buffers: shared hit=3 read=11496 written=450
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..424.38 rows=13860 width=0) (actual time=4.434..4.434 rows=13365 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL PLATED TIN'::text)
                                                   Buffers: shared read=69
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.56..108.44 rows=31 width=20) (actual time=0.028..0.298 rows=30 loops=13365)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=249931 read=208743 dirtied=1452 written=8806
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=400200)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1297161 read=26500 written=1297
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=1033.326..1033.326 rows=299436 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                 Buffers: shared hit=109837 read=36100 written=15
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=20.596..938.755 rows=299436 loops=1)
                                       Buffers: shared hit=109837 read=36100 written=15
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.044..0.075 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.014 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=18.668..176.713 rows=59887 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145102
                                             Buffers: shared hit=109835 read=36100 written=15
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=12.047..12.047 rows=59887 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=7 read=826
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=24310)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73069
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 7.366 ms
 Execution time: 9817.062 ms
(66 rows)

COMMIT;
COMMIT
