BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL POLISHED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1722212.75..1722214.56 rows=727 width=38) (actual time=9504.849..9504.850 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1739341 read=256887 dirtied=505 written=6
   ->  HashAggregate  (cost=1722165.47..1722178.19 rows=727 width=38) (actual time=9504.786..9504.787 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1739338 read=256887 dirtied=505 written=6
         ->  Hash Join  (cost=39444.68..1721683.15 rows=24116 width=38) (actual time=1081.169..9465.824 rows=24190 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1739338 read=256887 dirtied=505 written=6
               ->  Nested Loop  (cost=39443.12..1721229.41 rows=24116 width=16) (actual time=1081.104..9432.246 rows=24190 loops=1)
                     Buffers: shared hit=1739334 read=256887 dirtied=505 written=6
                     ->  Hash Join  (cost=39442.82..1713448.07 rows=24116 width=16) (actual time=1081.084..9247.950 rows=24190 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1666641 read=256887 dirtied=505 written=6
                           ->  Nested Loop  (cost=412.14..1673724.05 rows=120581 width=20) (actual time=7.144..8093.388 rows=120666 loops=1)
                                 Buffers: shared hit=1556570 read=220782 dirtied=505 written=6
                                 ->  Nested Loop  (cost=411.70..1478315.63 rows=399084 width=16) (actual time=6.913..3839.275 rows=396935 loops=1)
                                       Buffers: shared hit=288118 read=176392 dirtied=420 written=4
                                       ->  Bitmap Heap Scan on part  (cost=411.14..28022.45 rows=13253 width=4) (actual time=6.858..149.170 rows=13229 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL POLISHED BRASS'::text)
                                             Heap Blocks: exact=11311
                                             Buffers: shared hit=3288 read=8105 written=1
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.82 rows=13253 width=0) (actual time=4.642..4.642 rows=13229 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL POLISHED BRASS'::text)
                                                   Buffers: shared read=82
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.56..109.12 rows=31 width=20) (actual time=0.027..0.268 rows=30 loops=13229)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=284830 read=168287 dirtied=420 written=3
                                 ->  Index Scan using orders_o_orderkey_o_orderdate_idx on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=396935)
                                       Index Cond: ((o_orderkey = lineitem.l_orderkey) AND (o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Buffers: shared hit=1268452 read=44390 dirtied=85 written=2
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=1070.332..1070.332 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=110071 read=36105
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=21.210..973.417 rows=300963 loops=1)
                                       Buffers: shared hit=110071 read=36105
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.052..0.082 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.012 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=18.671..183.619 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145336
                                             Buffers: shared hit=110069 read=36105
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=12.110..12.110 rows=60193 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=6 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=24190)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72693
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.007 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 7.993 ms
 Execution time: 9505.924 ms
(66 rows)

COMMIT;
COMMIT
